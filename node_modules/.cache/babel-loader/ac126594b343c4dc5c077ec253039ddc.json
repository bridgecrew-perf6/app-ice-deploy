{"remainingRequest":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/babel-loader/lib/index.js!/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/src/components/tableApi.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/src/components/tableApi.vue","mtime":1643864072569},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/cache-loader/dist/cjs.js","mtime":1619883687281},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/babel-loader/lib/index.js","mtime":1643124028662},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/cache-loader/dist/cjs.js","mtime":1619883687281},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/vue-loader/lib/index.js","mtime":1631030283681},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/babel.config.js","mtime":1643124044146},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/cache-loader/dist/cjs.js","mtime":1619883687281},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/babel-loader/lib/index.js","mtime":1643124028662},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/cache-loader/dist/cjs.js","mtime":1619883687281},{"path":"/Users/kitsana.chu/projects/vue-learn/test_examvue/my_exam/node_modules/vue-loader/lib/index.js","mtime":1631030283681}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2tpdHNhbmEuY2h1L3Byb2plY3RzL3Z1ZS1sZWFybi90ZXN0X2V4YW12dWUvbXlfZXhhbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMva2l0c2FuYS5jaHUvcHJvamVjdHMvdnVlLWxlYXJuL3Rlc3RfZXhhbXZ1ZS9teV9leGFtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBmaWVsZHM6IFsiaWQiLCAibmFtZSIsICJ1c2VybmFtZSIsICJlbWFpbCIsICJhZGRyZXNzIiwgInBob25lIiwgIndlYnNpdGUiLCAiY29tcGFueSJdLAogICAgICBmaWx0ZXI6IG51bGwsCiAgICAgIGZpbHRlck9uOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7Ly8gc29ydE9wdGlvbnMoKSB7CiAgICAvLyAgIC8vIENyZWF0ZSBhbiBvcHRpb25zIGxpc3QgZnJvbSBvdXIgZmllbGRzCiAgICAvLyAgIHJldHVybiB0aGlzLmZpZWxkcwogICAgLy8gICAgIC5maWx0ZXIoZiA9PiBmLnNvcnRhYmxlKQogICAgLy8gICAgIC5tYXAoZiA9PiB7CiAgICAvLyAgICAgICByZXR1cm4geyB0ZXh0OiBmLmxhYmVsLCB2YWx1ZTogZi5rZXkgfQogICAgLy8gICAgIH0pCiAgICAvLyB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRBcGkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEFwaTogZnVuY3Rpb24gZ2V0QXBpKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLmRhdGEgPSBbXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGh0dHAuZ2V0KCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdXNlcnMiKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMuc3RhdHVzID09PSAyMDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhID0gcmVzLmRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBpdGVtKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIHRocm93IHsKICAgICAgICAgICAgICAgICAgcmVzOiByZXMKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDEyXV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["tableApi.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,CAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,CAFA;AAGA,MAAA,MAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,QAAA,EAAA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,GATA;AAmBA,EAAA,OAnBA,qBAmBA;AACA,SAAA,MAAA;AACA,GArBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,IAAA,GAAA,EAAA;AADA;AAAA;AAAA,uBAGA,KAAA,CAAA,KAAA,CAAA,GAAA,8CAHA;;AAAA;AAGA,gBAAA,GAHA;;AAAA,sBAMA,GAAA,CAAA,MAAA,KAAA,GANA;AAAA;AAAA;AAAA;;AAOA,gBAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,2CAAA,IAAA;AAAA,iBAAA,CAAA;AAPA;AAAA;;AAAA;AAAA,sBASA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYA,gBAAA,OAAA,CAAA,GAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAfA;AAtBA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- fillter -->\n    <b-row>\n      <b-col lg=\"6\" class=\"mt-0\">\n        <b-form-group\n          label=\"Filter\"\n          label-for=\"filter-input\"\n          label-cols-sm=\"3\"\n          label-align-sm=\"right\"\n          label-size=\"sm\"\n          class=\"mb-0\"\n        >\n          <b-input-group size=\"sm\">\n            <b-form-input\n              id=\"filter-input\"\n              v-model=\"filter\"\n              type=\"search\"\n              placeholder=\"Type to Search\"\n            ></b-form-input>\n\n            <b-input-group-append>\n              <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\n            </b-input-group-append>\n          </b-input-group>\n        </b-form-group>\n      </b-col>\n    </b-row>\n    <!-- filter -->\n    <b-table\n      :fields=\"fields\"\n      :items=\"data\" \n      :filter-included-fields=\"filterOn\"\n      :filter=\"filter\" \n      responsive \n      striped \n      hover \n      caption-top\n      small\n      class=\"mb-5\"\n    >\n      <template #table-caption>Temp data connect API : https://jsonplaceholder.typicode.com/users</template>\n      <template v-slot:cell(address)=\"row\">\n        <p class=\"mt-0 mb-1\"><small class=\"text-muted\">street :</small></p>\n        <p class=\"mt-0 mb-1\">{{ row.item.address.street }}</p>\n        <p class=\"mt-0 mb-1 text-sm\"><small class=\"text-muted\">city :</small></p>\n        <p class=\"mt-0 mb-1\">{{ row.item.address.city }}</p>\n        <p class=\"mt-0 mb-1\"><small class=\"text-muted\">zipcode :</small></p>\n        <p class=\"mt-0 mb-1\">{{ row.item.address.zipcode }}</p>\n      </template>\n      <template v-slot:cell(company)=\"row\">\n        <p class=\"mt-0 mb-1\">{{ row.item.company.name }}</p>\n      </template>\n    </b-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      data: [],\n      fields: [\"id\", \"name\", \"username\",\"email\",\"address\",\"phone\",\"website\",\"company\"],\n      filter: null,\n      filterOn: [],\n    };\n  },\n  computed: {\n    // sortOptions() {\n    //   // Create an options list from our fields\n    //   return this.fields\n    //     .filter(f => f.sortable)\n    //     .map(f => {\n    //       return { text: f.label, value: f.key }\n    //     })\n    // }\n  },\n  mounted() {\n    this.getApi();\n  },\n  methods: {\n    async getApi() {\n      this.data = [];\n      try {\n        const res = await this.$http.get(\n          `https://jsonplaceholder.typicode.com/users`\n        );\n        if (res.status === 200) {\n          this.data = res.data.map((item) => ({ ...item }));\n        } else {\n          throw { res };\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>"],"sourceRoot":"src/components"}]}